name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: $${{ steps.publish.outputs.script-file }}    #steps é um valor especial que traz o contexto dos steps dos jobs, acessando pela linha "id" que nesse caso é "id: publish"
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';' #seta o output script-file com o valor do arquivo js encontrado
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3 
        with:
          name: dist-files-for-deploy
          path: |
            dist/
            package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Build Artifacts
        uses: actions/download-artifact@v3      #download do artefato do job de build
        with:
          name: dist-files-for-deploy     #essa etapa pegará o zip resultante pelo upload-artifact e descompactará na pasta dist do job de deploy 
      - name: Output Contents
        run: ls 
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}" #esse contexto "needs" acessa o output do job de build
      - name: Deploy
        run: echo "Deploying..."
